<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知否知否</title>
  
  
  <link href="https://aimyorcc.github.io/atom.xml" rel="self"/>
  
  <link href="https://aimyorcc.github.io/"/>
  <updated>2021-03-23T05:53:54.413Z</updated>
  <id>https://aimyorcc.github.io/</id>
  
  <author>
    <name>Aimyorcc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>嵌入式学习笔记</title>
    <link href="https://aimyorcc.github.io/2021-03-15-%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%AD%A6%E4%B9%A0.html"/>
    <id>https://aimyorcc.github.io/2021-03-15-%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%AD%A6%E4%B9%A0.html</id>
    <published>2021-03-15T14:23:25.000Z</published>
    <updated>2021-03-23T05:53:54.413Z</updated>
    
    <content type="html"><![CDATA[<h4 id="GCC相关指令"><a href="#GCC相关指令" class="headerlink" title="GCC相关指令"></a>GCC相关指令</h4><ul><li>gcc -o 输出文件名 输入文件名.c<ul><li>输入文件名可以在<code>-o</code>前或输入文件名后，但不可以直接跟在<code>-o</code>后。</li></ul></li><li>gcc -v -o 输出文件名 输入文件名<ul><li>查看gcc翻译官详细信息。</li></ul></li><li>C语言编译过程<ul><li>预处理：gcc -E -o<ul><li>等于<code>cpp -o 输出文件名.i 输入文件名.c</code></li><li><code>#define</code>和<code>#include</code>在预处理阶段被翻译。</li></ul></li><li>编译：gcc -S -o<ul><li>等于<code>/usr/lib/gcc/i486-linux-gnu/4.4.3/cc1 -o 输出文件名.s 输入文件名.i</code></li><li>编译的时候已经没有<code>#define</code>和<code>#include</code>，主要编译关键字和运算符。</li></ul></li><li>编译-&gt;汇编：gcc -c -o<ul><li>等于<code>/usr/lib/gcc/i486-linux-gnu/4.4.3/as -o 输出文件名.o 输入文件名.s</code></li></ul></li><li>编译-&gt;汇编-&gt;链接: gcc -o 输出文件名 输入文件名.c<ul><li>等于<code>/usr/lib/gcc/i486-linux-gnu/4.4.3/collect2 -o 输出文件名 输入文件名.o+....</code></li></ul></li></ul></li></ul><h4 id="C语言常见错误"><a href="#C语言常见错误" class="headerlink" title="C语言常见错误"></a>C语言常见错误</h4><ul><li>预处理错误：#include出错，找不到指定头文件。<ul><li><code>#include &quot;name&quot;</code>双引号一般指自定义的头文件，在当前目录下寻找“name”头文件。</li><li><code>#include &lt;name&gt;</code>尖括号一般指系统库的头文件，在系统的环境变量中寻找“name”头文件。</li><li>解决方法之一：<code>gcc -I./查找头文件的目录 -o 输出文件名 输入文件名.c</code></li></ul></li><li>编译错误<ul><li>语法错误</li></ul></li><li>链接错误<ul><li><code>undefined reference to &#39;fun&#39;</code>指原材料不够，即没有关于fun函数的足够的内容。解决：查看标签是否实现；链接时是否将相关文件加入一起链接。</li><li><code>multiple definition of &#39;fun&#39;</code>存在多个fun函数的定义。解决：只保留一个标签的实现。</li></ul></li></ul><h4 id="预处理的使用"><a href="#预处理的使用" class="headerlink" title="预处理的使用"></a>预处理的使用</h4><ul><li><p><code>#include</code>包含头文件</p></li><li><p><code>#define 宏名 宏体</code>宏体对宏名进行替换，但是不进行语法检查（注意）！</p><ul><li>宏体加括号更安全，例如：<code>#define ABC (5+3)</code></li><li>宏函数：```#define ABC(x) (5+(x))</li></ul></li><li><p>条件编译：<code>#ifdef</code>、<code>#else</code>、<code>#endif</code></p></li><li><p>预定义宏：系统已经定义好的。方便在调试中使用。</p><ul><li><code>__FUNCTION__</code>：函数名，<code>%s</code>。</li><li><code>__FILE__</code>：文件名，<code>%s</code>。</li><li><code>__LINE__</code>：行号，<code>%d</code>。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;GCC相关指令&quot;&gt;&lt;a href=&quot;#GCC相关指令&quot; class=&quot;headerlink&quot; title=&quot;GCC相关指令&quot;&gt;&lt;/a&gt;GCC相关指令&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;gcc -o 输出文件名 输入文件名.c&lt;ul&gt;
&lt;li&gt;输入文件名可以在&lt;code&gt;-</summary>
      
    
    
    
    <category term="Quick Start" scheme="https://aimyorcc.github.io/categories/Quick-Start/"/>
    
    
    <category term="GCC、嵌入式" scheme="https://aimyorcc.github.io/tags/GCC%E3%80%81%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>人工智能学习笔记</title>
    <link href="https://aimyorcc.github.io/2021-03-09-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>https://aimyorcc.github.io/2021-03-09-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</id>
    <published>2021-03-09T14:58:25.000Z</published>
    <updated>2021-03-23T05:53:52.926Z</updated>
    
    <content type="html"><![CDATA[<p>努力学习一下人工智能相关的内容吧～～</p><h4 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h4><p>机器学习有三种训练方法：监督学习、非监督学习、强化学习。</p><ul><li>监督学习（Supervised Learning）：是一种目的明确的训练方式，你知道得到的是什么。它从有标记的训练数据中推导出预测函数。有标记的训练数据是指每个训练实例都包括输入和期望的输出。<ul><li>特点：目的明确，需要带标签的训练数据，易评估效果。</li></ul></li><li>无监督学习（Unsupervised Learning）：其是机器学习任务的一种。它从无标记的训练数据中推断结论。<ul><li>特点：目的不明确，不需要给数据打标签，无法量化效果。</li></ul></li><li>强化学习是机器学习的另一个领域。给定数据，学习如何选择一系列行动，以最大化长期收益。</li><li>泛化能力、泛化误差</li><li>欠拟合（underfitting）：模型不能在训练集上获得足够低的误差。即模型复杂度低，在训练集上就表现很差，不能学习到数据背后的规律。<ul><li>一般发生在训练刚开始时，经过不断训练后会变好。</li></ul></li><li>过拟合（overfitting）：训练误差和测试误差之间的差距太大。即模型复杂度高于实际问题，模型在训练集上表现很好，但在测试集上却表现很差。模型对训练集”死记硬背”（记住了不适用于测试集的训练集性质或特点），没有理解数据背后的规律，泛化能力差。</li><li>马尔科夫决策树</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;努力学习一下人工智能相关的内容吧～～&lt;/p&gt;
&lt;h4 id=&quot;相关概念&quot;&gt;&lt;a href=&quot;#相关概念&quot; class=&quot;headerlink&quot; title=&quot;相关概念&quot;&gt;&lt;/a&gt;相关概念&lt;/h4&gt;&lt;p&gt;机器学习有三种训练方法：监督学习、非监督学习、强化学习。&lt;/p&gt;
&lt;ul</summary>
      
    
    
    
    <category term="Quick Start" scheme="https://aimyorcc.github.io/categories/Quick-Start/"/>
    
    
    <category term="ML、DL、AI" scheme="https://aimyorcc.github.io/tags/ML%E3%80%81DL%E3%80%81AI/"/>
    
  </entry>
  
  <entry>
    <title>MacOS hexo + github 创建blog</title>
    <link href="https://aimyorcc.github.io/2021-02-23-hexo-github-%E5%88%9B%E5%BB%BAblog.html"/>
    <id>https://aimyorcc.github.io/2021-02-23-hexo-github-%E5%88%9B%E5%BB%BAblog.html</id>
    <published>2021-02-23T03:33:23.000Z</published>
    <updated>2021-02-23T16:07:54.769Z</updated>
    
    <content type="html"><![CDATA[<p>一年前就创建了博客，一直没有记录内容。眨眼间一年多就过去了，翻看博客发现什么内容都没有，仿佛虚度了一年…其实很早前就想把创建博客的过程写下来，但是拖延症重度患者一直拖拖拖…就到了现在。记录一下吧，也避免之后再想写博客又忘记了怎么创建、怎么上传、怎么更新…（本来脑子就不好使，还总是想不起记录下来，我大概是没治了）</p><h2 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ol><li>安装Node.js：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install node</span><br></pre></td></tr></table></figure><ol start="2"><li>安装Git：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install git</span><br></pre></td></tr></table></figure><h3 id="注册github账号、创建项目"><a href="#注册github账号、创建项目" class="headerlink" title="注册github账号、创建项目"></a>注册github账号、创建项目</h3><p>注册github在此不表。</p><p>创建项目过程：</p><ol><li><p>打开<a href="https://github.com" target="_blank" rel="noopener">github</a>，登录自己的账号。<br>点击右上角➕号创建新项目。</p></li><li><p>在“Repository name”下填写自己的项目名称，如<code>Aimyorcc.github.io</code>。其中，<code>github.io</code>后缀必须有。</p></li><li><p>勾选<code>Initialize this repository with a README</code>，用来初始化项目。</p></li><li><p>点击<code>Create repository</code>创建项目。</p></li><li><p>点击<code>Settings</code>，然后在最后找到<code>GitHub Pages</code>，点击<code>Choose a theme</code>选择主题。然后再返回<code>GitHub Pages</code>，点击网页链接，查看自己的网页。</p></li></ol><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><ol><li><p>在电脑合适的位置创建一个新的文件夹，用来存放博客相关的文件，如<code>～\Desktop\blog</code></p></li><li><p>打开终端，进入博客所在文件夹：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~\Desktop\blog</span><br></pre></td></tr></table></figure></li><li><p>安装Hexo博客框架：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>查看hexo是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure></li><li><p>初始化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></li><li><p>安装必备组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p>生成静态网页：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g  <span class="comment">#same as "hexo generate"</span></span><br></pre></td></tr></table></figure></li><li><p>开启hexo服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s  <span class="comment">#same as "hexo server"</span></span><br></pre></td></tr></table></figure></li><li><p>在浏览器中打开网址<a href="http://0.0.0.0:4000/" target="_blank" rel="noopener">http://0.0.0.0:4000/</a>可以查看本地博客网页。</p></li></ol><h2 id="将博客部署至github"><a href="#将博客部署至github" class="headerlink" title="将博客部署至github"></a>将博客部署至github</h2><h3 id="添加ssh-key到Github"><a href="#添加ssh-key到Github" class="headerlink" title="添加ssh key到Github"></a>添加<code>ssh key</code>到Github</h3><h4 id="检查ssh-key是否存在"><a href="#检查ssh-key是否存在" class="headerlink" title="检查ssh key是否存在"></a>检查<code>ssh key</code>是否存在</h4><p>在终端执行如下命令（若<code>id_rsa.pub</code>或<code>id_dsa.pub</code>存在，则直接将<code>ssh key</code>添加到github中）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al ~/.ssh</span><br></pre></td></tr></table></figure><h4 id="生成新的ssh-key"><a href="#生成新的ssh-key" class="headerlink" title="生成新的ssh key"></a>生成新的<code>ssh key</code></h4><p>执行如下命令生成<code>ssh key</code>（注意将<code>your_name@example.com</code>替换成自己的github注册邮箱）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></table></figure><p>默认会在<code>~/.ssh</code>路径下生成<code>id_rsa</code>和<code>id_rsa.pub</code>。</p><h4 id="将ssh-key添加到github中"><a href="#将ssh-key添加到github中" class="headerlink" title="将ssh key添加到github中"></a>将<code>ssh key</code>添加到github中</h4><p>打开<code>id_ras.pub</code>文件，复制文件中的信息，然后粘贴到github的<code>Add SSH key</code>页面中。<code>Add SSH key</code>页面位置：<code>Github页面--&gt; Settings --&gt; SSH keys --&gt; Add SSH key</code>。<br>在<code>Title</code>里任意添加一个标题，然后将<code>ssh key</code>粘贴进去即可。</p><p>在终端输入如下代码，若显示<code>Hi your_name!</code>则成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>终端下进入<code>blog</code>文件夹下，打开<code>_config.yml</code>，在最底端将<code>deploy</code>修改为如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/your_name/your_name.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>将<code>your_name</code>替换为自己的用户名。hexo 3.1.1版后，<code>type</code>值为<code>git</code>。</p><ul><li>注意：在配置所有的<code>_config.yml</code>文件时（包括theme中的），在所有的冒号后都要添加一个空格，否则执行hexo命令会报错。</li></ul><h2 id="写文章、发布文章"><a href="#写文章、发布文章" class="headerlink" title="写文章、发布文章"></a>写文章、发布文章</h2><h3 id="安装git部署插件"><a href="#安装git部署插件" class="headerlink" title="安装git部署插件"></a>安装git部署插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new post <span class="string">"article name"</span></span><br></pre></td></tr></table></figure><p>在<code>~\blog\source\\_posts</code>目录下可看到新出现的<code>.md</code>文件即为新文章，另外一个新文件夹为存放图片的文件夹。</p><h3 id="发布到网页并上传到github"><a href="#发布到网页并上传到github" class="headerlink" title="发布到网页并上传到github"></a>发布到网页并上传到github</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g  <span class="comment">#生成静态网页</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s  <span class="comment">#本地预览效果</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d <span class="comment">#上传到github</span></span><br></pre></td></tr></table></figure><p>最后，打开<code>your_name.github.io</code>主页便可以看到新发布的文章。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zhuanlan.zhihu.com/p/35668237" target="_blank" rel="noopener">【超详细Hexo+Github博客搭建小白教程】</a></p><p><a href="https://zhuanlan.zhihu.com/p/114195340" target="_blank" rel="noopener">【GitHub Pages + Hexo免费搭建个人博客_Mac】</a></p><p><a href="https://gsl201600.github.io/2019/08/14/mac搭建基于Hexo-Github的Blog/" target="_blank" rel="noopener">【mac 搭建基于Hexo-Github的Blog】</a></p><p><a href="https://github.com/jeasonstudio/blog/issues/6" target="_blank" rel="noopener">【Mac上搭建基于GitHub Page的Hexo博客】</a></p><p><a href="https://www.dazhuanlan.com/2020/01/03/5e0e93097836c/" target="_blank" rel="noopener">【在vsCode中进行GitHub pages个人博客搭建】</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一年前就创建了博客，一直没有记录内容。眨眼间一年多就过去了，翻看博客发现什么内容都没有，仿佛虚度了一年…其实很早前就想把创建博客的过程写下来，但是拖延症重度患者一直拖拖拖…就到了现在。记录一下吧，也避免之后再想写博客又忘记了怎么创建、怎么上传、怎么更新…（本来脑子就不好使，</summary>
      
    
    
    
    <category term="Quick Start" scheme="https://aimyorcc.github.io/categories/Quick-Start/"/>
    
    
    <category term="hexo, github, blog" scheme="https://aimyorcc.github.io/tags/hexo-github-blog/"/>
    
  </entry>
  
  <entry>
    <title>为Mac原生词典添加词库</title>
    <link href="https://aimyorcc.github.io/2020-09-07-post.html"/>
    <id>https://aimyorcc.github.io/2020-09-07-post.html</id>
    <published>2020-09-07T07:35:08.000Z</published>
    <updated>2021-02-23T15:45:11.982Z</updated>
    
    <content type="html"><![CDATA[<p>Mac自带的词典中词库虽然够用，但是希望其能够在词语解释方面更加详尽，于是尝试自己为其添加词库（其实就是突然想好好学英语然后又看到了为Mac词典添加词库的内容）。<br>方法一稍复杂，方法二稍简单。</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ol><li><p>python （系统自带）</p></li><li><p><a href="https://developer.apple.com/download/more/" target="_blank" rel="noopener">Additional Tools for Xcode</a>（将其中的“Dictionary Development Kit”复制到“~/Developer/Extras/”路径下，若没有相应文件夹则新建。）</p></li><li><p><a href="https://developer.apple.com/download/more/" target="_blank" rel="noopener">Command Line Tools for Xcode</a></p></li><li><p><a href="https://github.com/ilius/pyglossary" target="_blank" rel="noopener">pyglossary</a>（将词典转换为Mac词典格式的工具）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/ilius/pyglossary.git</span><br></pre></td></tr></table></figure></li><li><p>BeautifulSoup4 （pyglossary需要的python包）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip3 install lxml beautifulsoup4 html5lib</span><br></pre></td></tr></table></figure></li></ol><h3 id="转换步骤"><a href="#转换步骤" class="headerlink" title="转换步骤"></a>转换步骤</h3><ol><li><p>下载好需要转换的词库，如Longman，Oxford，Collins，Merriam-Webster等（.mdd或.mdx格式），并将其存放在任意目录下。此文中以“~/Downloads/dict/Oxford_dict.mdx”为例。</p></li><li><p>进入词库所在文件夹，并输入转换命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/Downloads/dict/</span><br><span class="line">$ ~/Downloads/pyglossary/main.py --write-format=AppleDict Oxford_dict.mdx Oxford_dict</span><br></pre></td></tr></table></figure><p>其中“~/Downloads/pyglossary”是pyglossary的存放地址。<br>第二句指令是指，使用pyglossary工具将Oxford_dict.mdx转换为苹果系统中词典的格式，并命名为Oxford_dict。</p></li><li><p>转换完成后，当前目录“~/Downloads/dict”下新生成了一个名为“Oxford_dict”的文件夹。进入该文件夹并编译生成“*.dictionary”文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> Oxford_dict</span><br><span class="line">$ make</span><br></pre></td></tr></table></figure><p>完成后，“Oxford_dict”文件夹中新生成了“Oxford_dict.dictionary”文件。</p></li><li><p>使用“cp”指令复制“Oxford_dict.dictionary”文件到“~/Library/Dictionaries”，或者直接在终端输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ make install</span><br></pre></td></tr></table></figure></li><li><p>打开词典App，在“Preferences”可以找到新添加的词库。</p></li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>以上方法转换的词典不能发音。</p><p>支持图片和发音的词库的转换方法请参考：</p><p><a href="https://kaihao.io/2018/mdict-to-macos-dictionary/?utm_source=pdawiki&utm_medium=social&utm_campaign=Macmillan2%20LDOCE5%20OLCC" target="_blank" rel="noopener">【Mdict to macOS Dictionary转换笔记】</a>。</p><p>当然更简单的方法是使用已经转换好的词库，请参考：</p><p><a href="https://www.pdawiki.com/forum/forum.php?mod=viewthread&tid=21623" target="_blank" rel="noopener">【Mac词典中的Macmillan2、LDOCE5、牛津朗文剑桥柯林斯四合一双解】</a>。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>知乎：<a href="https://www.zhihu.com/question/20428599" target="_blank" rel="noopener">【可以给Mac的Dictionary添加其他原装词典吗？怎么添加？】</a></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h3><ol><li><a href="https://github.com/jjgod/mac-dictionary-kit/files/4176459/DictUnifier.zip" target="_blank" rel="noopener">DictUnifier.app</a> （Catalina 版本）</li><li>安装glib<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install glib</span><br></pre></td></tr></table></figure></li></ol><h3 id="转换步骤-1"><a href="#转换步骤-1" class="headerlink" title="转换步骤"></a>转换步骤</h3><ol><li>将所需的词典下载好，格式为*.tar.bz2。 词典包下载参考网址：<a href="http://download.huzheng.org/zh_CN/index.html" target="_blank" rel="noopener">【词典包】</a></li><li>将下载好的词典包拖到DictUnifier.app中，等待转换完成。</li><li>转换成功后，打开词典，进入“Preferences”中可以看到新添加的词典包。勾选后即可在词典中使用。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Mac自带的词典中词库虽然够用，但是希望其能够在词语解释方面更加详尽，于是尝试自己为其添加词库（其实就是突然想好好学英语然后又看到了为Mac词典添加词库的内容）。&lt;br&gt;方法一稍复杂，方法二稍简单。&lt;/p&gt;
&lt;h2 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class</summary>
      
    
    
    
    <category term="Tools" scheme="https://aimyorcc.github.io/categories/Tools/"/>
    
    
    <category term="Dictionary, MacOS, Tool" scheme="https://aimyorcc.github.io/tags/Dictionary-MacOS-Tool/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://aimyorcc.github.io/2019-12-20-hello-world.html"/>
    <id>https://aimyorcc.github.io/2019-12-20-hello-world.html</id>
    <published>2019-12-20T08:56:10.739Z</published>
    <updated>2021-02-23T15:45:07.961Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.</summary>
      
    
    
    
    <category term="Quick Start" scheme="https://aimyorcc.github.io/categories/Quick-Start/"/>
    
    
    <category term="hexo" scheme="https://aimyorcc.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
